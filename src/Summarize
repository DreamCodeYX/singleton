设计模式之单例：

1、饿汉式单例
        优点：线程安全，对象在类加载的时候就已经被实例化，在线程创建之前；没有锁机制，效率较高
        缺点：类加载而加载创建，所以会导致内存的浪费


2、懒汉式单例：
        优点：本身不安全的，但是添加双重检查加锁 可以保证线程安全，在被调用的时候才进行加载，所以内存未造成浪费
        缺点：懒汉式是典型的时间换空间，也就是每次获取实例都会进行判断，看是否需要创建实例，浪费判断的时间。
   注入书和枚举方式以及ThreadLocal 得单例模式更加有优越性
   ThreadLocal：线程内安全
3、编写单例的时候应该注意俩点：
        3.1、应对反射暴力初始化
        3.2、应对序列化反序列化创建对象
4、内部类
    4.1、内部类的种类
            a、成员内部类
            b、局部内部类
            c、匿名内部类
            d、静态内部类

    4.2、为什么成员内部类可以无条件访问外部类的成员？？
             编译器会默认为成员内部类添加了一个指向外部类对象的引用

    4.3、为什么局部内部类和匿名内部类只能访问局部final变量？
             是为了解决访问数据不一致的问题

    4.4、静态内部类有特殊的地方吗？
            静态内部类是不依赖于外部类的，也就说可以在不创建外部类对象的情况下创建内部类的对象。
            另外，静态内部类是不持有指向外部类对象的引用的

    4.5、内部类的使用场景和好处
            a、每个内部类都能独立的继承一个接口的实现，所以无论外部类是否已经继承了某个(接口的)实现，
                对于内部类都没有影响。内部类使得多继承的解决方案变得完整
            b、方便将存在一定逻辑关系的类组织在一起，又可以对外界隐藏。
            c、方便编写事件驱动程序
            d、方便编写线程代码